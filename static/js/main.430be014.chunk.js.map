{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"iQAEeA,WAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCwBRC,6MA1BXC,MAAQ,CAAEC,KAAM,MAEhBC,aAAe,SAACC,GACZA,EAAMC,iBAENC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAG1B,IAAAO,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACIE,KAAK,OACLC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAACC,GAAD,OAAOT,EAAKU,SAAS,CAAEjB,KAAMgB,EAAEE,OAAOJ,qBAlBpDK,IAAMC,WCiCfC,qBAhCX,SAAAA,EAAYhB,GAAO,IAAAD,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IACfjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMH,KAUVsB,SAAW,WACP,IAAMC,EAASxB,EAAKyB,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjCxB,EAAKa,SAAU,CAACe,WAZhB5B,EAAKL,MAAQ,CAAEiC,MAAO,GACtB5B,EAAKyB,SAAWV,IAAMgB,YAJP/B,mFAQfI,KAAKqB,SAASC,QAAQM,iBAAiB,OAAQ5B,KAAKmB,2CAU/C,IAAAU,EACyB7B,KAAKH,MAAMiC,MAAjCC,EADHF,EACGE,YAAaC,EADhBH,EACgBG,KACrB,OACI/B,EAAAC,EAAAC,cAAA,OAAK8B,MAAO,CAACC,WAAU,QAAAC,OAAUnC,KAAKT,MAAMiC,SACxCvB,EAAAC,EAAAC,cAAA,OACIiC,IAAKpC,KAAKqB,SACVgB,IAAKN,EACLO,IAAKN,EAAKO,kBA1BN5B,IAAMC,YCUf4B,EARG,SAAC3C,GACf,IAAM4C,EAAS5C,EAAM4C,OAAOC,IAAI,SAACZ,GAC7B,OAAO7B,EAAAC,EAAAC,cAACwC,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAG5C,OAAO7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqC,ICiBzBK,6MApBXvD,MAAQ,CAAEkD,OAAQ,MAElBM,qDAAiB,SAAAC,EAAOxD,GAAP,IAAAyD,EAAA,OAAAC,EAAAhD,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOlE,KAFR,OACPyD,EADOG,EAAAO,KAKb/D,EAAKa,SAAS,CAAEgC,OAAQQ,EAASW,KAAKC,UALzB,wBAAAT,EAAAU,SAAAd,oIASb,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe6B,MAAO,CAAE8B,UAAW,SAC9C9D,EAAAC,EAAAC,cAAC6D,EAAD,CAAWlE,SAAUE,KAAK+C,iBAC1B9C,EAAAC,EAAAC,cAAC8D,EAAD,CAAWxB,OAAQzC,KAAKT,MAAMkD,iBAf5B9B,IAAMC,WCDxBsD,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.430be014.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID 7e1e6861e17c6c0ac2d80e605c930e58b8c76a03bb308fd372ad1925e60db342'\n    }\n});","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term: '' };\n\n    onFormSubmit = (event) =>  {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state.term);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search </label>\n                        <input \n                            type=\"text\" \n                            value={this.state.term} \n                            onChange={(e) => this.setState({ term: e.target.value })}\n                        />\n                    </div> \n                </form>\n            </div>\n        );\n    } \n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { spans: 0 };\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n\n        this.setState( {spans} );\n    }\n\n    render() {\n        const { description, urls } = this.props.image;\n        return(\n            <div style={{gridRowEnd: `span ${this.state.spans}` }}>\n                <img \n                    ref={this.imageRef}\n                    alt={description}\n                    src={urls.regular}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard; ","import React from 'react';\nimport './ImageList.css';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image} />\n    });\n\n    return <div className=\"image-list\">{images}</div>\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n    state = { images: [] };\n\n    onSearchSubmit = async (term) => {\n        const response = await unsplash.get('/search/photos', {\n            params: { query: term }\n        });\n\n        this.setState({ images: response.data.results });\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px'}}>\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                <ImageList images={this.state.images}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n"],"sourceRoot":""}